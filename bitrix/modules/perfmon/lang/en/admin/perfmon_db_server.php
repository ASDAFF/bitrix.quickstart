<?
$MESS["PERFMON_DB_SERVER_TITLE"] = "Performance Monitor: DB Server";
$MESS["PERFMON_STATUS_TITLE"] = "Server Statistics";
$MESS["PERFMON_WAITS_TITLE"] = "Server Waits Statistics";
$MESS["PERFMON_PARAMETERS_TITLE"] = "Server parameters";
$MESS["PERFMON_STATS_TITLE"] = "Database Object Statistics";
$MESS["PERFMON_KPI_NAME"] = "Name";
$MESS["PERFMON_KPI_VALUE"] = "Value";
$MESS["PERFMON_KPI_RECOMENDATION"] = "Recommendation";
$MESS["PERFMON_KPI_NAME_VERSION"] = "Version";
$MESS["PERFMON_KPI_REC_VERSION_OLD"] = "Your MySQL version is outdated and needs to be updated as soon as possible.";
$MESS["PERFMON_KPI_REC_VERSION_OK"] = "This diagnostic tool supports the existing MySQL version.";
$MESS["PERFMON_KPI_REC_VERSION_NEW"] = "This diagnostic tool does not support the existing MySQL version. The results may be incorrect.";
$MESS["PERFMON_KPI_NAME_UPTIME"] = "Time";
$MESS["PERFMON_KPI_VAL_UPTIME"] = "#DAYS#d #HOURS#h #MINUTES#m #SECONDS#s";
$MESS["PERFMON_KPI_REC_UPTIME_OK"] = "MySQL server running time.";
$MESS["PERFMON_KPI_REC_UPTIME_TOO_SHORT"] = "The MySQL server is running less than 24 hours. You may get inaccurate recommendations.";
$MESS["PERFMON_KPI_NAME_QUERIES"] = "Total server requests";
$MESS["PERFMON_KPI_REC_NO_QUERIES"] = "Cannot diagnose server if it does not process requests.";
$MESS["PERFMON_KPI_NAME_GBUFFERS"] = "Global buffers";
$MESS["PERFMON_KPI_REC_GBUFFERS"] = "Size of global buffers (#VALUE#).";
$MESS["PERFMON_KPI_NAME_CBUFFERS"] = "Connection buffers";
$MESS["PERFMON_KPI_REC_CBUFFERS"] = "Single connection buffer size (#VALUE#).";
$MESS["PERFMON_KPI_NAME_CONNECTIONS"] = "Connections";
$MESS["PERFMON_KPI_REC_CONNECTIONS"] = "Max. connections (#VALUE#).";
$MESS["PERFMON_KPI_NAME_MEMORY"] = "Memory";
$MESS["PERFMON_KPI_REC_MEMORY"] = "Maximum memory usage (Global Buffers + Connection Buffers * Connections).<br> Ensure this value is no greater than 85 or 90 per cent of the total server physical memory (allowing for other processes).";
$MESS["PERFMON_KPI_NAME_MYISAM_IND"] = "MyISAM indexes";
$MESS["PERFMON_KPI_REC_MYISAM_IND"] = "Size of MyISAM indexes.";
$MESS["PERFMON_KPI_REC_MYISAM_NOIND"] = "No MyISAM indexes exist.";
$MESS["PERFMON_KPI_REC_MYISAM4_IND"] = "Cannot estimate index size for MySQL prior to version 5.";
$MESS["PERFMON_KPI_NAME_KEY_MISS"] = "MyISAM index cache (failures)";
$MESS["PERFMON_KPI_REC_KEY_MISS"] = "If the value is > 5%,  increase #PARAM_NAME# (currently #PARAM_VALUE#)";
$MESS["PERFMON_KPI_NAME_QCACHE_SIZE"] = "Request cache (size)";
$MESS["PERFMON_KPI_REC_QCACHE_ZERO_SIZE"] = "Enable request caching (set #PARAM_NAME# to #PARAM_VALUE_LOW# or more, but not higher than #PARAM_VALUE_HIGH#).";
$MESS["PERFMON_KPI_REC_QCACHE_TOOLARGE_SIZE"] = "Request cache size (#PARAM_NAME#) is over #PARAM_VALUE_HIGH#. This may decrease performance.";
$MESS["PERFMON_KPI_REC_QCACHE_OK_SIZE"] = "Request cache size (#PARAM_NAME#).";
$MESS["PERFMON_KPI_NAME_QCACHE"] = "Request cache (effectiveness)";
$MESS["PERFMON_KPI_REC_QCACHE_NO"] = "Request cache is out of use due to lack of SELECT requests.";
$MESS["PERFMON_KPI_REC_QCACHE"] = "If the cache effectiveness is under #GOOD_VALUE#, you may need to increase #PARAM_NAME# (currently #PARAM_VALUE#)";
$MESS["PERFMON_KPI_NAME_QCACHE_PRUNES"] = "Request cache (prunes)";
$MESS["PERFMON_KPI_REC_QCACHE_PRUNES"] = "Number of pruned requests (#STAT_NAME#). If this value is growing fast, increase #PARAM_NAME# (currently #PARAM_VALUE#), but not more than #PARAM_VALUE_HIGH#.";
$MESS["PERFMON_KPI_NAME_SORTS"] = "Sorts";
$MESS["PERFMON_KPI_REC_SORTS"] = "Total sorts (#STAT_NAME#).";
$MESS["PERFMON_KPI_NAME_SORTS_DISK"] = "Sorts (disk)";
$MESS["PERFMON_KPI_REC_SORTS_DISK"] = "Rate of sort operations requiring creating temporary tables on the disk (#STAT_NAME#). If the rate exceeds #GOOD_VALUE#, increase #PARAM1_NAME# (currently #PARAM1_VALUE#) and #PARAM2_NAME# (currently #PARAM2_VALUE#).";
$MESS["PERFMON_KPI_NAME_JOINS"] = "Select_range_check + Select_full_join";
$MESS["PERFMON_KPI_REC_JOINS"] = "Number of table join operations not requiring indexes. (#STAT_NAME#). Large indications may require increasing #PARAM_NAME# (currently #PARAM_VALUE#) or add table join indexes.";
$MESS["PERFMON_KPI_NAME_TMP_DISK"] = "Temporary tables (disk)";
$MESS["PERFMON_KPI_REC_TMP_DISK_1"] = "Rate of temporary tables requiring temporary disk space (#STAT_NAME#). The rate is over #STAT_VALUE# which requires that you increase the value of #PARAM1_NAME# (currently #PARAM1_VALUE#) and #PARAM2_NAME# (currently #PARAM2_VALUE#). Ensure both values are the same. In addition, you may need to decrease SELECT DISTINCT requests without LIMIT.";
$MESS["PERFMON_KPI_REC_TMP_DISK_2"] = "Rate of temporary tables requiring temporary disk space (#STAT_NAME#). The rate is more than #STAT_VALUE#; the temporary table is rather large. You may need to decrease SELECT DISTINCT requests without LIMIT.";
$MESS["PERFMON_KPI_REC_TMP_DISK_3"] = "Rate of temporary tables requiring temporary disk space (#STAT_NAME#) is relatively low (under #STAT_VALUE#).";
$MESS["PERFMON_KPI_NAME_THREAD_CACHE"] = "Thread cache";
$MESS["PERFMON_KPI_REC_THREAD_NO_CACHE"] = "Thread cache (#PARAM_NAME#) is off. Set this parameter to #PARAM_VALUE# as an initial value to start with.";
$MESS["PERFMON_KPI_REC_THREAD_CACHE"] = "Thread cache efficiency (#STAT_NAME#). If this value is less than #GOOD_VALUE#, you may need to increase #PARAM_NAME# (currently #PARAM_VALUE#).";
$MESS["PERFMON_KPI_NAME_TABLE_CACHE"] = "Open table cache";
$MESS["PERFMON_KPI_REC_TABLE_CACHE"] = "Open table cache efficiency (#STAT_NAME#). If this value is less than #GOOD_VALUE#, you may need to increase #PARAM_NAME# (currently #PARAM_VALUE#). Be careful; increase this parameter gradually to avoid exceeding the maximum open file limit imposed by the operating system.";
$MESS["PERFMON_KPI_NAME_OPEN_FILES"] = "Open files";
$MESS["PERFMON_KPI_REC_OPEN_FILES"] = "Rate of open files (#STAT_NAME#). If this value exceeds #GOOD_VALUE#, increase the value of #PARAM_NAME# (currently #PARAM_VALUE#).";
$MESS["PERFMON_KPI_NAME_LOCKS"] = "Locks";
$MESS["PERFMON_KPI_REC_LOCKS"] = "Rate of successfully obtained unenqueued locks (#STAT_NAME#). If this value is less than #GOOD_VALUE#, you may need to optimize your queries or use InnoDB.";
$MESS["PERFMON_KPI_NAME_INSERTS"] = "Concurrent inserts";
$MESS["PERFMON_KPI_REC_INSERTS"] = "Concurrent inserts are disabled. You can enable them by setting #PARAM_NAME# to #REC_VALUE#.";
$MESS["PERFMON_KPI_NAME_CONN_ABORTS"] = "Connection aborts";
$MESS["PERFMON_KPI_REC_CONN_ABORTS"] = "Rate of incorrectly closed connections. If this value exceeds 5%, you have to bugfix the application.";
$MESS["PERFMON_KPI_NAME_INNODB_BUFFER"] = "InnoDB buffer";
$MESS["PERFMON_KPI_REC_INNODB_BUFFER"] = "InnoDB buffer effectiveness (#STAT_NAME#). If this value is less than #GOOD_VALUE#, consider increasing #PARAM_NAME# (currently #PARAM_VALUE#).";
$MESS["PERFMON_KPI_REC_INNODB_FLUSH_LOG"] = "The value of #PARAM_NAME# should be #GOOD_VALUE#.";
$MESS["PERFMON_KPI_REC_INNODB_FLUSH_METHOD"] = "The value of #PARAM_NAME# should be #GOOD_VALUE#.";
$MESS["PERFMON_KPI_REC_TX_ISOLATION"] = "The value of #PARAM_NAME# must be #GOOD_VALUE#.";
$MESS["PERFMON_KPI_EMPTY"] = "empty";
$MESS["PERFMON_KPI_NO"] = "no";
$MESS["PERFMON_KPI_NAME_INNODB_LOG_WAITS"] = "Log Buffer Waits";
$MESS["PERFMON_KPI_REC_INNODB_LOG_WAITS"] = "If greater than zero and growing, increase the value of <span class=\"perfmon_code\">innodb_log_file_size</span> (current value: #VALUE#). Important! First stop the web server, then stop MySQL. Change the parameter value in the settings file. Save existing log files in a temporary location. Start the server. If no error occurs, delete the old log files.";
$MESS["PERFMON_KPI_NAME_BINLOG"] = "Binlog_cache_disk_use";
$MESS["PERFMON_KPI_REC_BINLOG"] = "Increase <span class=\"perfmon_code\">binlog_cache_size</span> parameter when > 0 (now its value is: #VALUE#)";
$MESS["PERFMON_WAIT_EVENT"] = "Server wait events";
$MESS["PERFMON_WAIT_PCT"] = "Percentage of total time";
$MESS["PERFMON_WAIT_AVERAGE_WAIT_MS"] = "Average event time (ms)";
$MESS["PERFMON_PARAMETER_NAME"] = "Parameter";
$MESS["PERFMON_PARAMETER_VALUE"] = "Actual value";
$MESS["PERFMON_REC_PARAMETER_VALUE"] = "Recommended value";
$MESS["PERFMON_KPI_ORA_PERMISSIONS"] = "Insufficient permissions to display statistics. Required: <span class=\"perfmon_code\">SELECT ANY DICTIONARY</span>.";
$MESS["PERFMON_KPI_ORA_REC_DB_FILE_SEQUENTIAL_READ"] = "Normal event. If the average read time is > 10 ms,  pay attention to the I/O subsystem performance and the <span class=\"perfmon_code\">SGA</span> cache buffer size. The session waits while a sequential read from the database is performed.";
$MESS["PERFMON_KPI_ORA_REC_DB_FILE_SCATTERED_READ"] = "Normal event. If the average read time is > 15 ms,  pay attention to the I/O subsystem performance and the <span class=\"perfmon_code\">SGA</span> cache buffer size. Similar to db file sequential read, except that the session is reading multiple data blocks.";
$MESS["PERFMON_KPI_ORA_REC_ENQ__TX___ROW_LOCK_CONTENTION"] = "Session tracing required. The resource is blocked for exclusive use when a transaction initiates its first change and stays blocked until the transaction results in a COMMIT or ROLLBACK.";
$MESS["PERFMON_KPI_ORA_REC_LOG_FILE_SYNC"] = "Normal event. If the average read time is > 10 ms,  pay attention to the I/O subsystem performance and the <span class=\"perfmon_code\">COMMIT_WRITE</span> value. The wait time includes the writing of the log buffer and the post.";
$MESS["PERFMON_KPI_ORA_REC_LATCH__CACHE_BUFFERS_CHAINS"] = "Repeated access to a block (or small number of blocks), known as a hot block.";
$MESS["PERFMON_KPI_ORA_REC_LATCH__LIBRARY_CACHE"] = "Pay attention to the <span class=\"perfmon_code\">CURSOR_SHARING</span> parameter, the object statistics and the <span class=\"perfmon_code\">METHOD_OPT</span> value. Problems with these latches are typically due to heavy use of literal SQL or very poor shared pool configuration. Possible reasons: Lack of statement reuse; Statements not using bind variables; Insufficient size of application cursor cache; Cursors closed explicitly after each execution; Frequent logon/logoffs; Shared pool too small.";
$MESS["PERFMON_KPI_ORA_REC_ENQ__TX___INDEX_CONTENTION"] = "Session tracing required. The resource is blocked for exclusive use when a transaction initiates its first change and stays blocked until the transaction results in a COMMIT or ROLLBACK.";
$MESS["PERFMON_KPI_ORA_REC_LOG_FILE_SWITCH_COMPLETION"] = "Relates to the I/O speed. Waiting for a log switch to complete.";
$MESS["PERFMON_KPI_ORA_REC_SQL_NET_MORE_DATA_FROM_CLIENT"] = "Relates to the client-server messaging speed. The server is performing another send to the client. The previous operation was also a send to the client.";
$MESS["PERFMON_KPI_ORA_REC_LATCH__SHARED_POOL"] = "Pay attention to the <span class=\"perfmon_code\">CURSOR_SHARING</span> parameter, the object statistics and the <span class=\"perfmon_code\">METHOD_OPT</span> value. Problems with these latches are typically due to heavy use of literal SQL or very poor shared pool configuration. Possible reasons: Lack of statement reuse; Statements not using bind variables; Insufficient size of application cursor cache; Cursors closed explicitly after each execution; Frequent logon/logoffs; Shared pool too small.";
$MESS["PERFMON_KPI_ORA_REC_CURSOR__PIN_S_WAIT_ON_X"] = "Pay attention to the <span class=\"perfmon_code\">CURSOR_SHARING</span> parameter, the object statistics and the <span class=\"perfmon_code\">METHOD_OPT</span> value. A session waits for this event when it is requesting a shared mutex pin and another session is holding an exclusive mutex pin on the same cursor object.";
$MESS["PERFMON_KPI_ORA_REC_BUFFER_BUSY_WAITS"] = "Can be caused by low I/O. Wait until a buffer becomes available. This event happens because a buffer is either being read into the buffer cache by another session (and the session is waiting for that to complete) or the buffer is the buffer cache, but in a incompatible mode (that is, some other session is changing the buffer).";
$MESS["PERFMON_KPI_ORA_REC_READ_BY_OTHER_SESSION"] = "Can be caused by low I/O speed. This event occurs when a session requests a buffer that is currently being read into the buffer cache by another session. Prior to release 10.1, waiting for this event was grouped with other reasons for waiting for buffers under the 'buffer busy wait' event";
$MESS["PERFMON_KPI_ORA_REC_EVENTS_IN_WAITCLASS_OTHER"] = "Bitrix / Oracle support problem.";
$MESS["PERFMON_KPI_ORA_REC_ROW_CACHE_LOCK"] = "Can be caused by low I/O speed. The session is trying to get a data dictionary lock.";
$MESS["PERFMON_KPI_ORA_REC_DB_FILE_PARALLEL_READ"] = "Can be caused by low I/O. This happens during recovery. It can also happen during buffer pre-fetching, as optimization (rather than performing multiple single-block reads). Database blocks that need to be changed as part of recovery are read in parallel from the database.";
$MESS["PERFMON_KPI_ORA_REC_DB_BLOCK_CHECKSUM"] = "To speed up all <span class=\"perfmon_code\">DBWR</span> operations.";
$MESS["PERFMON_KPI_ORA_REC_SESSION_CACHED_CURSORS"] = "Empirical value for BITRIX application";
$MESS["PERFMON_KPI_ORA_REC_CURSOR_SHARING_FORCE"] = "Typical for the HTTP/PHP apps w/o using bind variables";
$MESS["PERFMON_KPI_ORA_REC_PARALLEL_MAX_SERVERS"] = "Empirical value for BITRIX application.";
$MESS["PERFMON_KPI_ORA_REC_COMMIT_WRITE"] = "To speed up all <span class=\"perfmon_code\">LGWR</span> operations";
$MESS["PERFMON_KPI_ORA_REC_OPEN_CURSORS"] = "Empirical value for BITRIX application.";
$MESS["PERFMON_KPI_ORA_REC_OPTIMIZER_MODE"] = "Empirical value for BITRIX application.";
$MESS["PERFMON_USER_NAME"] = "Scheme name";
$MESS["PERFMON_MIN_LAST_ANALYZED"] = "Time of oldest scheme analysis";
$MESS["PERFMON_MAX_LAST_ANALYZED"] = "Time of most recent scheme analysis";
$MESS["PERFMON_KPI_ORA_REC_STATS_NEW"] = "The statistics on the objects of #USER_NAME# is up-to-date.";
$MESS["PERFMON_KPI_ORA_REC_STATS_OLD"] = "Warning! The user #USER_NAME# object statistics are out of date. It is strongly recommended to collect the user statistics at least once a week by executing <span class=\"perfmon_code\">BEGIN DBMS_STATS.GATHER_SCHEMA_STATS('#USER_NAME#', ESTIMATE_PERCENT=>NULL, CASCADE=>TRUE) END;</span>";
?>