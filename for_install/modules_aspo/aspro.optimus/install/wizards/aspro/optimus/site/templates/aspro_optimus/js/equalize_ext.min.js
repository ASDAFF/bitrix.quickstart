$.fn.equalizeHeightsExt=function(d,b,f){var e=this.map(function(h,k){var c=0,j=0;if(b!==false){c=parseInt($(k).find(b).actual("outerHeight"))}if(c){c+=12}$(k).css("height","");if(d==true){j=$(k).actual("outerHeight")-c}else{j=$(k).actual("height")-c}return j}).get();for(var a=0,g=e.length;a<g;++a){if(e[a]%2){--e[a]}}return this.height(Math.max.apply(this,e))};$.fn.sliceHeightExt=function(a){function b(h){h.each(function(){$(this).css("line-height","");$(this).css("height","")});if(typeof(a.autoslicecount)=="undefined"||a.autoslicecount!==false){var d=(h.first().hasClass("item")?h.first().outerWidth():h.first().parents(".item").outerWidth());var e=h.first().parents(".top_wrapper").outerWidth();if(!d){if(a.parent){d=h.closest(a.parent).outerWidth()-5}else{d=h.first().outerWidth()-5}}if(!e){e=h.first().parents(".row").outerWidth()}if(e&&d){a.slice=Math.floor(e/d)}}if(a.slice){for(var f=0;f<h.length;f+=a.slice){$(h.slice(f,f+a.slice)).equalizeHeightsExt(a.outer,a.classNull,a.minHeight)}}if(a.lineheight){var g=parseInt(a.lineheight);if(isNaN(g)){g=0}h.each(function(){$(this).css("line-height",($(this).actual("height")+g)+"px")})}}var a=$.extend({slice:null,outer:false,lineheight:false,autoslicecount:true,classNull:false,minHeight:false,options:false,parent:false},a);var c=$(this);b(c);BX.addCustomEvent("onWindowResize",function(d){ignoreResize.push(true);b(c);ignoreResize.pop()})};var timerResize=false,ignoreResize=[];$(window).resize(function(){if(!ignoreResize.length){if(timerResize){clearTimeout(timerResize);timerResize=false}timerResize=setTimeout(function(){BX.onCustomEvent("onWindowResize",false)},100)}});